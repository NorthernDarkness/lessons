1. You have an enum:

enum Bridge{
        BRIDGE_0_0(0,0),
        BRIDGE_0_25(0,25),
        BRIDGE_0_26(0,26),
        BRIDGE_0_28(0,28),
        BRIDGE_1_0(1,0),
        BRIDGE_1_25(1,25),
        BRIDGE_1_26(1,26),
        BRIDGE_1_28(1,28),
        BRIDGE_2_0(2,0),
        BRIDGE_2_25(2,25),
        BRIDGE_2_26(2,26),
        BRIDGE_2_28(2,28),
        BRIDGE_3_0(3,0),
        BRIDGE_3_25(3,25),
        BRIDGE_3_26(3,26),
        BRIDGE_3_28(3,28),
        BRIDGE_4_0(4,0),
        BRIDGE_4_25(4,25),
        BRIDGE_4_26(4,26),
        BRIDGE_4_28(4,28),
        BRIDGE_5_0(5,0),
        BRIDGE_5_25(5,25),
        BRIDGE_5_26(5,26),
        BRIDGE_5_28(5,28),
        BRIDGE_6_0(6,0),
        BRIDGE_6_25(6,25),
        BRIDGE_6_26(6,26),
        BRIDGE_6_28(6,28);

        private final int shelf;
        private final int slot;

        Bridge(int shelf, int slot){
            this.shelf = shelf;
            this.slot = slot;
        }

        public int getShelf() {
            return shelf;
        }

        public int getSlot() {
            return slot;
        }


You Need to write a method that gets a List<Integer> of existing shelf numbers.
The method has to return a List<Bridge> that belongs to even shelves from the list.

Example input list of integers: 0, 1, 2
Example output list of bridges: 0-0, 0-25, 0-26, 0-28, 2-0, 2-25, 2-26, 2-28

Limitations:

loops and methods contains() and containsAll() are not allowed to be used

2.

Write a method that gets a String representing IPv4 Ip address with "." as octet delimiter like "192.168.0.1".
The method has to return the same IP address in HEX with leading zeros with ":" as delimiter like "C0:A8:00:01"
