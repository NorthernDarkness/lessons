линукс:

как показать скрытые файлы
как показать список процессов
как создать пустой файл
как сменить права доступа к файлу
как отобразить файлы отсортированные по времени создания
как посмотреть ип адресс и мак адрес интерфейса
как создать симлинк
какие демоны линукс есть7

что такое каналы
как отобразить 10 строку из файла
как перейти на уровень выше(в хоямк в предыдущую папку)
как запустить программу в фоновом режиме

сети:

на каком уровне оси работает коммутатор
зачем нужен влан(широковещательный домен)
что такое тегированные и нетагированные порты
ЛАГ

что такое RFC
Конфигурация роутера дома делал ли? есть ли под сеть?
маршрутизация в случае когда ип назначения внутри своей под сети. за пределами подсети. понятие основного шлюза.
как ротер понимает куда слать пакет.(таблица маршрутизации) типы записей в таблице (стаические и динамические маршруты)
протоколы динамической маршрутизации
петля


что такое роутер

как получается что ип выдавайемы йпровайдером 1  а устройств подключенных к роутеру много.
как такое возможно и как роутер понимает чей пакет. делается ли это на л3 уровне. NAT


Имеется сеть 128.138.243.0/16, напишите ее сетевую маску, сетевой и широковещательный адрес.
Ответ:
Сетевая маска: 255.255.0.0
Сетевой адрес: 128.138.0.0
Широковещательный адрес: 128.138.255.255

жава:

что значит ооп
что такое констурктор
статик поле. (одно дял всего класса)
можно ли увелить размер массива. как?
что можешь рассказать про стороки
конкатенация строк приведение типов
эксепшены
Может ли один интерфейс наследоваться от другого
методы строки

зачем нужны интерфейсы зачем писать private void m (List<?> l)
строка что внутри, \n, char, сколько байт, как число, юникод
StringBuilder
жава док


1

	public static void main(String[] args) {
		int a = 1;
		int b = a-- - --a;
		System.out.println(b + " " + a);
	}



2
	class A{

	}

	public static void main(String[] args) {
		Map<String, A> pets = new HashMap<>();
		A a = new A();
		pets.put("1", a);
		pets.put("1", a);
		pets.put("2", a);
		System.out.println(pets.size());
	}

3

	public static void main(String[] args) {
		int a = 1;
		int[] arr = { 1, 2, 3 };
		f(a, arr);
		System.out.println(a);
		System.out.println(arr[0]);
	}

	static void f(int a, int[] arr) {
		a++;
		arr[0] = 0;
	}

4

public class Dog {

	private String name;

	Fer(String name) {
		this.name = name;
	}

	public void getName() {
		return name;
	}
}

class App{
	public static void main(String[] args) {
		Dog aDog = new Dog("Max");
		foo(aDog);
		System.out.println(aDog.getName().equals("Max"));
		System.out.println(aDog.getName().equals("Fifi"));
	}

	public static void foo(Dog d) {
		System.out.println(d.getName().equals("Max"));
		d = new Dog("Fifi");
		System.out.println(d.getName().equals("Fifi"));
	}
}

5

public class Fer {

	static String s1 = "1";
	String s2 = "1";

	public static void main(String[] args) {
		Fer a = new Fer();
		Fer b = new Fer();
		a.s1 = "2";
		a.s2 = "2";
		System.out.println(a.getS1() + a.s2);
		System.out.println(b.getS1() + b.s2);
	}

	String getS1() {
		return s1;
	}
}

6

public class Fer {

	private static int a = 1;

	public static void main(String[] args) {
		Fer f1 = new Fer();
		Fer f2 = new Fer();
		f1.incr();
		f2.incr();
		System.out.println(f1.getA());
		System.out.println(f2.getA());
	}

	public void incr() {
		a++;
	}

	public int getA() {
		return a;
	}

}

7

public class Fer {

	public static void main(String[] args) {
		Cat tomCat = null;
		Arrays.asList(new Cat("Tom"), tomCat);
		List<Cat> b = new ArrayList<>();
		for (Cat cat : b) {
			System.out.println(cat.getName());
		}
	}

	static class Cat {
		String name;

		Cat(String name) {
			this.name = name;
		}

		String getName() {
			return name;
		}
	}
}

8 Нписать сигнатуру метода:

	public static <K, V> Map<K,V> method(K[] t1, V[] t2) {
		return null;
	}


9

interface I_A { public void out1(); }
interface I_B { public void out2(); }

class Impl implements I_A, I_B {     //1
    public void out2() {
        System.out.print("2");
    }
    public void out1() {
        System.out.print("1");
    }
}

public class Test {
    public static void main(String[] args) {
        Impl impl = new Impl();
        I_A a;
        a = impl;
        a.out1();
        ((I_B) a).out2();              //2
    }
}

10

public class At {

	private int x = 2;

	public static void multX(At a, int n) {
		a.setX(a.getX() * n);
	}

	public int getX() {
		return x;
	}

	public void setX(int xn) {
		x = xn;
	}

	public static void trippleValue(int x) {
		x *= 3;
	}

	public static At resetX(At a) {
		a = new At();
		return a;
	}

	public static void main(String[] args) {
		int x = 4;
		trippleValue(x);
		At anA = new At();
		multX(anA, x);
		resetX(anA);
		System.out.print(anA.getX());
	}

}

11

System.out.println("2 + 2 = " + 2 + 2);

12

 int x = 10;
    do {
        x--;
    } while(x < 10);

13

public static void main(String[] args) {
        boolean a = true;
        boolean b = false;
        boolean c = true;
        if (a || b && c)
        System.out.print("Hello ");
        if (a && !b && c)
        System.out.print("World");
    }

14

 public static void main(String[] args) {
        String s = new String("ssssss");
        StringBuffer sb = new StringBuffer("bbbbbb");
        s.concat("-aaa");
        sb.append("-aaa");
        System.out.println(s);
        System.out.println(sb);
    }

15

public static void main(String[] args) {
        MyLink b1 = new MyLink();
        MyLink b2 = b1;
        b2.str = "My String";
        System.out.println(b1.str);

        String a1 = "Test";
        String a2 = a1;
        System.out.println(a2);
        a1 = "Not a Test";
        System.out.println(a2);
    }

геттеры и сеттеры что такое
англ:

ситем тетс фанкшн тест
был ли релаьный опыт конфигурации сети
почему решил уйти с предыдущего места